// <auto-generated />
using System;
using Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infra.Data.Migrations
{
    [DbContext(typeof(SqlContext))]
    [Migration("20240404204941_Fake-Data")]
    partial class FakeData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.Asset", b =>
                {
                    b.Property<int>("AssetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("AssetId"));

                    b.Property<string>("AuthToken")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<int>("DenesterQuantity")
                        .HasColumnType("int");

                    b.Property<int>("EggPackerQuantity")
                        .HasColumnType("int");

                    b.Property<bool>("HasFeedback")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("InsertedAt")
                        .HasColumnType("datetime(0)");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Key")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<int>("PlantId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(0)");

                    b.HasKey("AssetId");

                    b.HasIndex("Name");

                    b.HasIndex("PlantId");

                    b.ToTable("Assets", (string)null);
                });

            modelBuilder.Entity("Domain.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<int>("BatchStatus")
                        .HasColumnType("int");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("char(14)");

                    b.Property<DateTime>("InsertedAt")
                        .HasColumnType("datetime(0)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("ProcessedBatches")
                        .HasColumnType("int");

                    b.HasKey("CustomerId");

                    b.HasIndex("BatchStatus", "Name");

                    b.ToTable("Customers", (string)null);
                });

            modelBuilder.Entity("Domain.Models.EggCategory", b =>
                {
                    b.Property<int>("EggCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("EggCategoryId"));

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertedAt")
                        .HasColumnType("datetime(0)");

                    b.Property<string>("Name")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(0)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("EggCategoryId");

                    b.HasIndex("Name");

                    b.HasIndex("UserId");

                    b.ToTable("EggCategories", (string)null);
                });

            modelBuilder.Entity("Domain.Models.Layout", b =>
                {
                    b.Property<int>("LayoutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("LayoutId"));

                    b.Property<DateTime>("InsertedAt")
                        .HasColumnType("datetime(0)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(0)");

                    b.HasKey("LayoutId");

                    b.HasIndex("Name");

                    b.HasIndex("ProductId");

                    b.ToTable("Layouts", (string)null);
                });

            modelBuilder.Entity("Domain.Models.MachineSchedule", b =>
                {
                    b.Property<int>("MachineScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("MachineScheduleId"));

                    b.Property<TimeSpan>("FinalProductionTime")
                        .HasColumnType("time(0)");

                    b.Property<TimeSpan>("InitialProductionTime")
                        .HasColumnType("time(0)");

                    b.Property<DateTime>("InsertedAt")
                        .HasColumnType("datetime(0)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(0)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("WeekDay")
                        .HasColumnType("int");

                    b.HasKey("MachineScheduleId");

                    b.HasIndex("UserId");

                    b.HasIndex("WeekDay", "InitialProductionTime", "FinalProductionTime");

                    b.ToTable("MachineSchedules", (string)null);
                });

            modelBuilder.Entity("Domain.Models.Plant", b =>
                {
                    b.Property<int>("PlantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PlantId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("char(14)");

                    b.Property<DateTime>("InsertedAt")
                        .HasColumnType("datetime(0)");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(0)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)");

                    b.HasKey("PlantId");

                    b.HasIndex("UserId");

                    b.HasIndex("Name", "Cnpj");

                    b.ToTable("Plants", (string)null);
                });

            modelBuilder.Entity("Domain.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("AssetId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertedAt")
                        .HasColumnType("datetime(0)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<int>("ProductType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(0)");

                    b.HasKey("ProductId");

                    b.HasIndex("AssetId");

                    b.HasIndex("Name");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("Domain.Models.ScheduledStop", b =>
                {
                    b.Property<int>("ScheduledStopId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ScheduledStopId"));

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time(0)");

                    b.Property<DateTime>("InsertedAt")
                        .HasColumnType("datetime(0)");

                    b.Property<int>("MachineScheduleId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time(0)");

                    b.HasKey("ScheduledStopId");

                    b.HasIndex("MachineScheduleId");

                    b.ToTable("ScheduledStops", (string)null);
                });

            modelBuilder.Entity("Domain.Models.Shift", b =>
                {
                    b.Property<int>("ShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ShiftId"));

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time(0)");

                    b.Property<DateTime>("InsertedAt")
                        .HasColumnType("datetime(0)");

                    b.Property<int>("MachineScheduleId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time(0)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("ShiftId");

                    b.HasIndex("MachineScheduleId");

                    b.HasIndex("Type");

                    b.ToTable("Shifts", (string)null);
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(89)
                        .HasColumnType("varchar(89)");

                    b.Property<DateTime>("InsertedAt")
                        .HasColumnType("datetime(0)");

                    b.Property<bool>("IsBatchDisabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("char(128)");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime(0)");

                    b.Property<DateTime?>("LastPasswordRecovery")
                        .HasColumnType("datetime(0)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("char(44)");

                    b.Property<string>("RecoveryCode")
                        .HasColumnType("char(5)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("char(5)");

                    b.Property<int>("TotvsUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(0)");

                    b.HasKey("UserId");

                    b.HasIndex("AssetId");

                    b.HasIndex("Email", "Name", "Document");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Domain.Models.Asset", b =>
                {
                    b.HasOne("Domain.Models.Plant", "Plant")
                        .WithMany("Assets")
                        .HasForeignKey("PlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("Domain.Models.EggCategory", b =>
                {
                    b.HasOne("Domain.Models.User", "User")
                        .WithMany("EggCategories")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.Layout", b =>
                {
                    b.HasOne("Domain.Models.Product", "Product")
                        .WithMany("Layouts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Domain.Models.MachineSchedule", b =>
                {
                    b.HasOne("Domain.Models.User", "User")
                        .WithMany("MachineSchedules")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.Plant", b =>
                {
                    b.HasOne("Domain.Models.User", "User")
                        .WithMany("Plants")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.Product", b =>
                {
                    b.HasOne("Domain.Models.Asset", "Asset")
                        .WithMany("Products")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("Domain.Models.ScheduledStop", b =>
                {
                    b.HasOne("Domain.Models.MachineSchedule", "MachineSchedule")
                        .WithMany("ScheduledStops")
                        .HasForeignKey("MachineScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MachineSchedule");
                });

            modelBuilder.Entity("Domain.Models.Shift", b =>
                {
                    b.HasOne("Domain.Models.MachineSchedule", "MachineSchedule")
                        .WithMany("Shifts")
                        .HasForeignKey("MachineScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MachineSchedule");
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.HasOne("Domain.Models.Asset", "Asset")
                        .WithMany("Users")
                        .HasForeignKey("AssetId");

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("Domain.Models.Asset", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Domain.Models.MachineSchedule", b =>
                {
                    b.Navigation("ScheduledStops");

                    b.Navigation("Shifts");
                });

            modelBuilder.Entity("Domain.Models.Plant", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("Domain.Models.Product", b =>
                {
                    b.Navigation("Layouts");
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Navigation("EggCategories");

                    b.Navigation("MachineSchedules");

                    b.Navigation("Plants");
                });
#pragma warning restore 612, 618
        }
    }
}
